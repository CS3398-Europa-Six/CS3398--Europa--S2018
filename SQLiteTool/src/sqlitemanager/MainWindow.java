/**********************************************************************************
**********************************************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sqlitemanager;
import java.io.File;
import java.sql.SQLException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ChaseLP
 */
@SuppressWarnings("serial")
public class MainWindow extends javax.swing.JFrame {

	private DBConnection dbserv;

    public MainWindow() {
    	this.dbserv = new DBConnection();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        MainWindowTitleLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        FileLabel = new javax.swing.JLabel();
        ChooseFileButton = new javax.swing.JButton();
        DisconnectButton = new javax.swing.JButton();
        ConnectedLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        QueryToolButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();

        fileChooser.setDialogTitle("Select a SQLite database file . . .");
        fileChooser.setFileFilter(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainWindowTitleLabel.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        MainWindowTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MainWindowTitleLabel.setText("SQLite Database Utility");

        FileLabel.setText("File: <none>");

        ChooseFileButton.setText("Choose File");
        ChooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseFileButtonActionPerformed(evt);
            }
        });

        DisconnectButton.setText("Disconnect");
        DisconnectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisconnectButtonActionPerformed(evt);
            }
        });

        ConnectedLabel.setText("Not connected, choose a file to connect");

        QueryToolButton.setText("Open Query Tool");
        QueryToolButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryToolButtonActionPerformed(evt);
            }
        });

        ExitButton.setText("Exit Utility");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainWindowTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ConnectedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ChooseFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DisconnectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(QueryToolButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MainWindowTitleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChooseFileButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConnectedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DisconnectButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QueryToolButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        this.DisconnectButton.setEnabled(false);
        pack();
    }// </editor-fold>                        

    private void ChooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File chosenfile = fileChooser.getSelectedFile();
            this.dbserv.setDBPath(chosenfile.getAbsolutePath().replace('\\', '/'));
            this.FileLabel.setText("File: " + chosenfile.getName());
        } else return;
//            System.out.println("File access cancelled by user.");
		try {
	    	if (this.dbserv.isconnected())
	    			this.dbserv.disconnect();
			this.dbserv.connect();
			if (this.dbserv.isconnected()) {
				this.DisconnectButton.setText("Disconnect");
				this.DisconnectButton.setEnabled(true);
				this.ConnectedLabel.setText("Database file is online");
			}
			else
				this.DisconnectButton.setEnabled(false);
		} catch (SQLException e) { }
    }

    private void DisconnectButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    	if (this.dbserv.isconnected()) {
			try {
				this.dbserv.disconnect();
				this.DisconnectButton.setText("Connect");
				this.ConnectedLabel.setText("Database file is offline");
			} catch (SQLException e) { }
    	}
    	else if (this.dbserv.hasfilename()) {
    		try {
    			this.dbserv.connect();
    			this.DisconnectButton.setText("Disconnect");
    			this.DisconnectButton.setEnabled(true);
    			this.ConnectedLabel.setText("Database file is online");
    		} catch (SQLException e) { this.DisconnectButton.setEnabled(false); return; }
    	}
    }                                                

    private void QueryToolButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                
    	if (!this.dbserv.isconnected()) {
    		JOptionPane.showMessageDialog(this, "You must connect to a database!",
    				"No database found", JOptionPane.INFORMATION_MESSAGE);
    		return;
    	}
        QueryBuilder queryWindow = new QueryBuilder();
        queryWindow.setdbserv(this.dbserv);
        queryWindow.setVisible(true);

    }                                               

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	try {
			this.dbserv.disconnect();
		} catch (SQLException e) { }
        System.exit(0);
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    private javax.swing.JFileChooser fileChooser;

    // Variables declaration - do not modify                     
    private javax.swing.JButton ChooseFileButton;
    private javax.swing.JLabel ConnectedLabel;
    private javax.swing.JButton DisconnectButton;
    private javax.swing.JButton ExitButton;
    private javax.swing.JLabel FileLabel;
    private javax.swing.JLabel MainWindowTitleLabel;
    private javax.swing.JButton QueryToolButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration
}
